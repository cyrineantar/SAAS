_schema-version: '3.2'
ID: SAAS
version: 0.0.2

parameters:
  enable-parallel-deployments: true

build-parameters:
  before-all:
    - builder: custom
      commands:
        - npm install --production
        - npx -p @sap/cds-dk cds build --production
        - npx rimraf gen/db/src/gen/data
        - npx rimraf gen/db/src/gen/scv

modules:


  # --------------------- SERVER MODULE ------------------------
  - name: SAAS-srv
  # ------------------------------------------------------------
    type: nodejs
    path: gen/srv
    build-parameters:
      ignore:
        - default-*.json
        - .env
        - "*node_modules*"
        - package-lock.json
    parameters:
      buildpack: nodejs_buildpack
      memory: 512M
      disk-quota: 1024M
    requires:
      - name: SAAS-uaa
      - name: SAAS-dest
      - name: SAAS-registry
      - name: SAAS-sm
      - name: app-api
        properties:
          APP_PROTOCOL: ~{app-protocol}
          APP_URI: ~{app-uri}
    provides:
      - name: srv-api
        properties:
          srv-url: ${default-url}
      - name: mtx-api
        properties:
          mtx-url: ${default-url}




  # ------------------ APP ROUTER MODULE -----------------------
  - name: SAAS-app
  # ------------------------------------------------------------
    type: approuter.nodejs
    path: app
    build-parameters:
      ignore:
        - default-*.json
        - .env
        - "*node_modules*"
        - package-lock.json
    parameters:
      memory: 256M
      disk-quota: 1024M
      keep-existing-routes: true
    properties:
      TENANT_HOST_PATTERN: '^(.*)-${default-uri}'
    requires:
      - name: SAAS-uaa
      - name: srv-api
        group: destinations
        properties:
          name: srv
          url: ~{srv-url}
          timeout: 600000
          forwardAuthToken: true
      - name: mtx-api
        group: destinations
        properties:
          name: mtx
          url: ~{mtx-url}
          timeout: 600000
    provides:
      - name: app-api
        properties:
          app-protocol: ${protocol}
          app-uri: ${default-uri}


resources:
  # ----------------------- UAA SERVICE ------------------------
  - name: SAAS-uaa
  # ------------------------------------------------------------
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      service-plan: application
      path: ./xs-security.json

  # -------------------- DESTINATION SERVICE -------------------
  - name: SAAS-dest
  # ------------------------------------------------------------
    type: org.cloudfoundry.managed-service
    parameters:
      service: destination
      service-plan: lite
      config:
        init_data:
          instance:
            existing_destinations_policy: ignore
            destinations:
              - Name: SAAS-cfapi
                Description: CF Cloud Controller API
                URL: ${controller-url}
                Type: HTTP
                ProxyType: Internet
                Authentication: OAuth2Password
                tokenServiceURL: ${authorization-url}/oauth/token
                clientId: cf
                clientSecret:
                User: <SetValueInCockpit>
                Password: <SetValueInCockpit>
              - Name: SAAS-NASA-api
                Description: NASA APIs
                URL: https://api.nasa.gov
                Type: HTTP
                ProxyType: Internet
                Authentication: NoAuthentication
                URL.queries.api_key: <SetValueInCockpit>
                HTML5.DynamicDestination: true






  # --------------------- REGISTRY SERVICE ---------------------
  - name: SAAS-registry
  # ------------------------------------------------------------
    type: org.cloudfoundry.managed-service
    requires:
      - name: mtx-api
    parameters:
      service: saas-registry
      service-plan: application
      service-name: SAAS-registry
      config:
        xsappname: SAAS
        appName: SAAS
        displayName: 'App'
        description: 'Business Application'
        category: 'SaaS Multitenant Apps'
        appUrls:
          onSubscription: ~{mtx-api/mtx-url}/-/cds/saas-provisioning/tenant/{tenantId}
          getDependencies: ~{mtx-api/mtx-url}/-/cds/saas-provisioning/dependencies
          onSubscriptionAsync: false
          onUnSubscriptionAsync: false
          callbackTimeoutMillis: 300000

  # ------------------- SERVICE MANAGER SERVICE ----------------
  - name: SAAS-sm
  # ------------------------------------------------------------
    type: org.cloudfoundry.managed-service
    requires:
     - name: SAAS-uaa
    parameters:
       service: service-manager
       service-plan: container
       polling_timeout_seconds: 240
       config:
         acquireTimeoutMillis: max
         polling_timeout_seconds: 480


